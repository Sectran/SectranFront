syntax = "proto3";

package secterm.v1;

option go_package = "secterm/v1;sectermv1";

message SectermFileInfo {
    //文件名称
    string Name = 1;
    //文件路径
    string Path = 2;    
    //修改时间
    uint64 ModTime = 3; 
    //文件大小
    uint64 Size = 4; //字节
    //文件权限
    uint32 Mode = 5;
    //是否为目录
    bool IsDir = 6; //文件上传不可以上传目录
}

//目录查询响应
message SectermFileListRequest {
    string Path = 1;
}

enum ActionMode {
    ACTIVE = 0;      //主动默认
    PASSIVE = 1;     //被动模式（只能服务器发送给客户端，如果客户端发送被动请求将被忽略）
}

enum TransProtocol {
    ZMODEM = 0;      //zmodem协议
    SFTP = 1;        //sftp协议
    SCP = 2;         //scp协议
    FTP = 3;         //ftp协议
}

message SectermFileListResponse {
    repeated SectermFileInfo FileInfo = 1;
}

//文件重命名/移动
message SectermFileMove {
    string Path = 1;        //原始路径
    string DstPath = 2;     //目标路径
    bool force = 3;         //强制覆盖
}

//删除文件,数组（去重）
message SectermFileDelete {
    repeated string Path = 1;   //删除文件路径数组
}

//创建文件
message SectermFileCreate {
    SectermFileInfo file =1;    //文件创建
}

message SectermFileDownloadReq {
    repeated SectermFileInfo FileInfo = 1;  //文件下载请求
    TransProtocol proto = 2;
    ActionMode mode = 3;
}

message SectermFileUploadReq {              //文件上传请求
    string DstPath = 1;                     //上传目的路径
    repeated SectermFileInfo FileInfo = 2;  //上传文件列表
    ActionMode mode = 3;
    TransProtocol proto= 4;
}

//传输成功确认
message SectermFileTransAck {
    string uuid = 1;
    string srvName = 2;
}

enum SectermFileCmd {
    //文件上传失败
    TRANS_ERROR = 0;
    //文件已存在
    TRANS_FILE_EXISTED = 1;
    //文件传输取消
    TRANS_CANCLE = 2;
    //文件传输完成
    TRANS_SUCCESS = 3;
}

message SectermFileCmdMessage {
    SectermFileCmd cmd = 1;
}

